@{
    ViewBag.Title = "Admin: All Products snd Categories";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Categories</h1>
@(Html.Kendo().Grid<SportsStore.Domain.Entities.Category>()
        .Name("categories")
        .Columns(columns =>
        {
            columns.Bound(c => c.CatID).Title("ID");
            columns.Bound(c => c.CatName).Title("Name");
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(270);
        })
        .ToolBar(toolbar => toolbar.Create())
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        .Pageable()
        .Sortable()
        .Scrollable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Events(events => events.Error("error_handler"))
            .Model(model => model.Id(p => p.CatID))
            .Create(update => update.Action("CreateCategory", "Admin"))
            .Read(read => read.Action("ReadCategories", "Admin"))
            .Update(update => update.Action("EditCategory", "Admin"))
            .Destroy(update => update.Action("DeleteCategory", "Admin"))
        )
    )

<h1>Products</h1>
@(Html.Kendo().Grid<SportsStore.KendoUI.Models.ProductViewModel>()
        .Name("products")
        .Columns(columns =>
        {
            columns.Bound(c => c.ProductID).Title("ID");
            columns.Bound(c => c.Name).Title("Name");
            columns.Bound(c => c.Description).Title("Description");
            columns.Bound(c => c.Price).Title("Price").Format("{0:c}");
            columns.Bound(c => c.Category).Title("Category").ClientTemplate("#=Category.CatName#").Sortable(false).Width(180);
            columns.Bound(c => c.ProductID).Title("Image").ClientTemplate(@"<img width='75' height='75' src='" + @Url.Action("GetImage", "Admin", new { productId = "#:ProductID#" }) + "'/>");
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(270);
        })
        .ToolBar(toolbar => toolbar.Create())
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        .Pageable()
        .Sortable()
        .Scrollable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSourcee => dataSourcee
            .Ajax()
            .PageSize(20)
            .Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.ProductID);
                model.Field(p => p.ProductID).Editable(false);
                model.Field(p => p.Category).DefaultValue(
                ViewData["defaultCategory"] as SportsStore.Domain.Entities.Category);
            })
            .Create(update => update.Action("CreateProduct", "Admin"))
            .Read(read => read.Action("ReadProducts", "Admin"))
            .Update(update => update.Action("EditProduct", "Admin"))
            .Destroy(update => update.Action("DeleteProduct", "Admin"))
        )
    )

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>